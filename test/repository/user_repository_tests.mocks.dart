// Mocks generated by Mockito 5.4.2 from annotations
// in bizi/test/repository/user_repository_tests.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:bizi/models/api_response.dart' as _i3;
import 'package:bizi/models/user_model.dart' as _i7;
import 'package:bizi/redux/repositories/user_repository.dart' as _i6;
import 'package:bizi/service/bizi_http.dart' as _i4;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiResponse_1 extends _i1.SmartFake implements _i3.ApiResponse {
  _FakeApiResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBiziHttp_2 extends _i1.SmartFake implements _i4.BiziHttp {
  _FakeBiziHttp_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BiziHttp].
///
/// See the documentation for Mockito's code generation for more information.
class MockBiziHttp extends _i1.Mock implements _i4.BiziHttp {
  MockBiziHttp() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  _i5.Future<_i3.ApiResponse> getData({
    required String? url,
    bool? useHeader = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [],
          {
            #url: url,
            #useHeader: useHeader,
          },
        ),
        returnValue: _i5.Future<_i3.ApiResponse>.value(_FakeApiResponse_1(
          this,
          Invocation.method(
            #getData,
            [],
            {
              #url: url,
              #useHeader: useHeader,
            },
          ),
        )),
      ) as _i5.Future<_i3.ApiResponse>);

  @override
  _i5.Future<_i3.ApiResponse> postData({
    required String? url,
    required Map<String, dynamic>? body,
    bool? useHeader = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postData,
          [],
          {
            #url: url,
            #body: body,
            #useHeader: useHeader,
          },
        ),
        returnValue: _i5.Future<_i3.ApiResponse>.value(_FakeApiResponse_1(
          this,
          Invocation.method(
            #postData,
            [],
            {
              #url: url,
              #body: body,
              #useHeader: useHeader,
            },
          ),
        )),
      ) as _i5.Future<_i3.ApiResponse>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i6.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.BiziHttp get biziHttp => (super.noSuchMethod(
        Invocation.getter(#biziHttp),
        returnValue: _FakeBiziHttp_2(
          this,
          Invocation.getter(#biziHttp),
        ),
      ) as _i4.BiziHttp);

  @override
  _i5.Future<_i7.UserModel?> emailSignIn({
    required String? password,
    required String? email,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #emailSignIn,
          [],
          {
            #password: password,
            #email: email,
          },
        ),
        returnValue: _i5.Future<_i7.UserModel?>.value(),
      ) as _i5.Future<_i7.UserModel?>);

  @override
  _i5.Future<_i7.UserModel?> emailSignUp(_i7.UserModel? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #emailSignUp,
          [user],
        ),
        returnValue: _i5.Future<_i7.UserModel?>.value(),
      ) as _i5.Future<_i7.UserModel?>);

  @override
  _i5.Future<_i7.UserModel?> googleSignIn() => (super.noSuchMethod(
        Invocation.method(
          #googleSignIn,
          [],
        ),
        returnValue: _i5.Future<_i7.UserModel?>.value(),
      ) as _i5.Future<_i7.UserModel?>);

  @override
  _i5.Future<_i7.UserModel?> appleSignIn() => (super.noSuchMethod(
        Invocation.method(
          #appleSignIn,
          [],
        ),
        returnValue: _i5.Future<_i7.UserModel?>.value(),
      ) as _i5.Future<_i7.UserModel?>);

  @override
  _i5.Future<_i7.UserModel?> getMyData() => (super.noSuchMethod(
        Invocation.method(
          #getMyData,
          [],
        ),
        returnValue: _i5.Future<_i7.UserModel?>.value(),
      ) as _i5.Future<_i7.UserModel?>);

  @override
  _i5.Future<_i3.ApiResponse> refreshAuthTokens() => (super.noSuchMethod(
        Invocation.method(
          #refreshAuthTokens,
          [],
        ),
        returnValue: _i5.Future<_i3.ApiResponse>.value(_FakeApiResponse_1(
          this,
          Invocation.method(
            #refreshAuthTokens,
            [],
          ),
        )),
      ) as _i5.Future<_i3.ApiResponse>);

  @override
  _i5.Future<_i3.ApiResponse> forgotPassword(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [email],
        ),
        returnValue: _i5.Future<_i3.ApiResponse>.value(_FakeApiResponse_1(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
      ) as _i5.Future<_i3.ApiResponse>);
}
